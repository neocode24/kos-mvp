apiVersion: apps/v1
kind: Deployment
metadata:
  name: certificate-sample
  labels:
    app: certificate-sample
spec:
  selector:
    matchLabels:
      app: certificate-sample
  replicas: 1
  template:
    metadata:
      labels:
        app: certificate-sample
    spec:
      containers:
      - name: certificate-sample
        image: docker.io/neocode24/certificate-sample:v1.0
        imagePullPolicy: "Always"
        env:
#        - name: JAVA_OPTS
#          value: -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit
        volumeMounts:
          - mountPath: /var/run/secrets/java.io/keystores
            name: keystore-volume
      initContainers:
      - name: init-certificate
        image: neocode24/certificate-sample:v1.0
        env:
        - name: truststore_jks
          value: /var/run/secrets/java.io/keystores/truststore.jks
        - name: ca_bundle
          value: /var/serving-cert/custom-cert.crt
        - name: password
          value: changeit
        command:
          - "/bin/sh"
          - "-c"
          - >
            awk 'split_after==1{n++;split_after=0} /-----END CERTIFICATE-----/ {split_after=1} {print > "cert" n ".pem"}' < $ca_bundle && for file in cert*; do keytool -import -noprompt -keystore $truststore_jks -file $file -storepass changeit -alias service-$file; done
#            echo 'test' && touch /var/run/secrets/java.io/keystores/a.out
        volumeMounts:
          - mountPath: /var/run/secrets/java.io/keystores
            name: keystore-volume
          - mountPath: /var/serving-cert
            name: serving-cert
      volumes:
      - name: keystore-volume
        emptyDir: {}
      - name: serving-cert
        secret:
          secretName: custom-cert
  strategy:
    rollingUpdate:
      maxSurge: 50%
